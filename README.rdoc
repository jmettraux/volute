
= volute

It could be a 'set event bus', 'on_set callback system' or a 'business logic relocator'.

It can be used to implement toy state machines, or dumb rule systems.


== include Volute

When the Volute mixin is included in a class, its attr_accessor call is modified so that the resulting attributer set method, upon setting the value of the attribute triggers a callback defined outside of the class.

  require 'rubygems'
  require 'volute' # gem install volute

  class Light
    include Volute

    attr_accessor :colour
    attr_accessor :changed_at
  end

  volute :colour do
    object.changed_at = Time.now
  end

  l = Light.new
  p l # => #<Light:0x10014c480>

  l.colour = :blue
  p l # => #<Light:0x10014c480 @changed_at=Fri Oct 08 20:01:52 +0900 2010, @colour=:blue>

There is a catch in this example, the volute will trigger for any class that inccludes Volute and which sees a change to its :colour attribute.

Those two classes would see their :colour hooked :

  class Light
    include Volute

    attr_accessor :colour
    attr_accessor :changed_at
  end

  class Flower
    include Volute

    attr_accessor :colour
  end

To make sure that only instance of Light will be concerned, one could write :

  volute Light do
    volute :colour do
      object.changed_at = Time.now
    end
  end

Inside of a volute, these are the available 'variables' :

* object - the instance whose attribute has been set
* attribute - the attribute name whose value has been set
* previous_value - the previous value for the attribute
* value - the new value

thus :

  volute Light do
    volute :colour do
      puts "#{object.class}.#{attribute} : #{previous_value.inspect} --> #{value.inspect}"
    end
  end

  l = Light.new
  l.colour = :blue
  l.colour = :red

would output :

  Light.colour : nil --> :blue
  Light.colour : :blue --> :red


== examples

http://github.com/jmettraux/volute/tree/master/examples/


== author

John Mettraux - http://github.com/jmettraux/


== feedback

* IRC freenode #ruote
* jmettraux@gmail.com


== license

MIT, see LICENSE.txt

